// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc166.Robot166;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Gyro driveGyro;
    public static AnalogChannel driveTemperature;
    public static SpeedController driveLeftvictor1;
    public static SpeedController driveLeftvictor2;
    public static SpeedController driveRightvictor1;
    public static SpeedController driveRightvictor2;
    public static RobotDrive driveDriveVictors;
    public static AnalogChannel driveUltrasonic;
    public static DigitalInput shoulderBallAcquiredLimit;
    public static DoubleSolenoid shoulderSolenoid;
    public static SpeedController rollerMotor;
    public static SpeedController shooterMotor;
    public static DigitalInput shooterShooterReady;
    public static DigitalInput shooterBallLoaded;
    public static Solenoid transmissionSolenoid;
    public static Compressor transmissionCompressor;
    public static AnalogChannel transmissionPressureSensor;
    public static DoubleSolenoid ballManipulatorDoubleSolenoid;
    public static DoubleSolenoid ballHolderDoubleSolenoid;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveGyro = new Gyro(1, 1);
	LiveWindow.addSensor("Drive", "Gyro", driveGyro);
        driveGyro.setSensitivity(0.007);
        driveTemperature = new AnalogChannel(1, 2);
	LiveWindow.addSensor("Drive", "Temperature", driveTemperature);
        
        driveLeftvictor1 = new Victor(1, 1);
	LiveWindow.addActuator("Drive", "Left victor 1", (Victor) driveLeftvictor1);
        
        driveLeftvictor2 = new Victor(1, 2);
	LiveWindow.addActuator("Drive", "Left victor 2", (Victor) driveLeftvictor2);
        
        driveRightvictor1 = new Victor(1, 3);
	LiveWindow.addActuator("Drive", "Right victor 1", (Victor) driveRightvictor1);
        
        driveRightvictor2 = new Victor(1, 4);
	LiveWindow.addActuator("Drive", "Right victor 2", (Victor) driveRightvictor2);
        
        driveDriveVictors = new RobotDrive(driveLeftvictor1, driveLeftvictor2,
              driveRightvictor1, driveRightvictor2);
	
        driveDriveVictors.setSafetyEnabled(true);
        driveDriveVictors.setExpiration(0.1);
        driveDriveVictors.setSensitivity(0.5);
        driveDriveVictors.setMaxOutput(1.0);
        driveUltrasonic = new AnalogChannel(1, 5);
	LiveWindow.addSensor("Drive", "Ultrasonic", driveUltrasonic);
        
        shoulderBallAcquiredLimit = new DigitalInput(1, 3);
	LiveWindow.addSensor("Shoulder", "Ball Acquired Limit", shoulderBallAcquiredLimit);
        
        shoulderSolenoid = new DoubleSolenoid(1, 4, 5);      
	
        
        rollerMotor = new Victor(1, 6);
	LiveWindow.addActuator("Roller", "Motor", (Victor) rollerMotor);
        
        shooterMotor = new Victor(1, 7);
	LiveWindow.addActuator("Shooter", "Motor", (Victor) shooterMotor);
        
        shooterShooterReady = new DigitalInput(1, 6);
	LiveWindow.addSensor("Shooter", "Shooter Ready", shooterShooterReady);
        
        shooterBallLoaded = new DigitalInput(1, 7);
	LiveWindow.addSensor("Shooter", "Ball Loaded", shooterBallLoaded);
        
        transmissionSolenoid = new Solenoid(1, 1);
	LiveWindow.addActuator("Transmission", "Solenoid", transmissionSolenoid);
        
        transmissionCompressor = new Compressor(1, 14, 1, 1);
	
        
        transmissionPressureSensor = new AnalogChannel(1, 4);
	LiveWindow.addSensor("Transmission", "Pressure Sensor", transmissionPressureSensor);
        
        ballManipulatorDoubleSolenoid = new DoubleSolenoid(1, 2, 3);      
	
        
        ballHolderDoubleSolenoid = new DoubleSolenoid(1, 6, 7);      
	
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
