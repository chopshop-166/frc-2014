// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc166.Robot166.subsystems;
import org.usfirst.frc166.Robot166.RobotMap;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 *
 */
public class Shooter extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController motor = RobotMap.shooterMotor;
    DigitalInput shooterReady = RobotMap.shooterShooterReady;
    DigitalInput ballLoaded = RobotMap.shooterBallLoaded;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public static final double MOTORSPEED = .8;
    //Return whether Reed value is true or false
    public boolean isCockedBack() {
        return !shooterReady.get();
    }
    
    public boolean isBallLoaded(){
        return ballLoaded.get();
    }
    //Set motor speed to 1 so shooter is pulled back
    public void pullShooterBack() {
        motor.set(MOTORSPEED);
    }
    //Set motor speed to 1 so shooter is released
    public void fireShooter() {
        motor.set(MOTORSPEED);
    }
    
    public void reverseShooter(){
        motor.set(-MOTORSPEED);
    }
    
    //Set shooter speed to 0 (stopped)
    public void stopShooter() {
        motor.set(0);
    }
}
